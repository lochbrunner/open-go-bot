// Available variables which can be used inside of strings.
// ${workspaceRoot}: the root folder of the team
// ${file}: the current opened file
// ${fileBasename}: the current opened file's basename
// ${fileDirname}: the current opened file's dirname
// ${fileExtname}: the current opened file's extension
// ${cwd}: the current working directory of the spawned process
{
  "version": "2.0.0",
  "command": "npm",
  "echoCommand": false,
  "tasks": [
    {
      "label": "development",
      "type": "shell",
      "args": [
        "run",
        "start",
        "--silent",
        "--react-hot-boilerplate-vscode:port=3000",
        "--react-hot-boilerplate-vscode:host=localhost"
      ],
      "isBackground": true,
      "problemMatcher": [
        {
          "owner": "custom",
          "pattern": {
            "regexp": "____________"
          },
          "watching": {
            "activeOnStart": true,
            "beginsPattern": "^webpack: Compiling\\.\\.\\.$",
            "endsPattern": "^webpack: (Compiled successfully|Failed to compile)\\.$"
          }
        },
        {
          "owner": "javascript",
          "severity": "error",
          "applyTo": "closedDocuments",
          "fileLocation": "absolute",
          "pattern": [
            {
              "regexp": "^(Module build failed:\\s.*?:\\s(.*):(.*?))[\\s+](?:\\(([\\d-]+):([\\d-]+)\\))?$",
              "message": 3,
              "file": 2,
              "line": 4,
              "column": 5
            }
          ]
        },
        {
          "owner": "javascript",
          "severity": "error",
          "applyTo": "closedDocuments",
          "fileLocation": "relative",
          "pattern": [
            {
              "regexp": "^ERROR in ./(.*)\\s?$",
              "file": 1
            },
            {
              "regexp": "^.*?Error:\\s(.*').*$",
              "message": 1
            },
            {
              "regexp": "^\\s+@.*?(\\d+)(?:-([\\d]+))?:(\\d+)(?:-([\\d]+))?\\s?$",
              "line": 1,
              "endLine": 2,
              "column": 3,
              "endColumn": 4
            }
          ]
        }
      ]
    },
    {
      "label": "release",
      "type": "shell",
      "args": [
        "run",
        "build",
        "--silent"
      ],
      "problemMatcher": [
        {
          "owner": "javascript",
          "severity": "error",
          "applyTo": "closedDocuments",
          "fileLocation": "absolute",
          "pattern": [
            {
              "regexp": "^(Module build failed:\\s.*?:\\s(.*):(.*?))[\\s+](?:\\(([\\d-]+):([\\d-]+)\\))?$",
              "message": 3,
              "file": 2,
              "line": 4,
              "column": 5
            }
          ]
        },
        {
          "owner": "javascript",
          "severity": "error",
          "applyTo": "closedDocuments",
          "fileLocation": "relative",
          "pattern": [
            {
              "regexp": "^ERROR in ./(.*)\\s?$",
              "file": 1
            },
            {
              "regexp": "^.*?Error:\\s(.*').*$",
              "message": 1
            },
            {
              "regexp": "^\\s+@.*?(\\d+)(?:-([\\d]+))?:(\\d+)(?:-([\\d]+))?\\s?$",
              "line": 1,
              "endLine": 2,
              "column": 3,
              "endColumn": 4
            }
          ]
        }
      ],
      "group": {
        "_id": "build",
        "isDefault": false
      }
    },
    {
      "label": "install",
      "type": "shell",
      "args": [
        "install",
        "--progress",
        "false",
        "--loglevel",
        "http"
      ],
      "problemMatcher": []
    },
    {
      "label": "lint",
      "type": "shell",
      "args": [
        "run",
        "lint",
        "--loglevel",
        "silent"
      ],
      "problemMatcher": [
        "$eslint-stylish"
      ],
      "group": {
        "_id": "test",
        "isDefault": false
      }
    }
  ]
}